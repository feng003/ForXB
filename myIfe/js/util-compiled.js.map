{"version":3,"sources":["util.js"],"names":[],"mappings":"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","file":"util-compiled.js","sourcesContent":["/**\r\n * Created by zhang on 2016/3/6.\r\n */\r\n\r\n// 判断arr是否为一个数组，返回一个bool值\r\n/**\r\n *  Object.isArray(object) -> Boolean\r\n *  - object (Object): The object to test.\r\n *\r\n *  Returns `true` if `object` is an [[Array]]; `false` otherwise.\r\n *\r\n *  ##### Examples\r\n *\r\n *      Object.isArray([]);\r\n *      //-> true\r\n *\r\n *      Object.isArray({ });\r\n *      //-> false\r\n **/\r\nfunction isArray(obj)\r\n{\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n}\r\n\r\n\r\n// 判断fn是否为一个函数，返回一个bool值\r\n/**\r\n *  Object.isFunction(object) -> Boolean\r\n *  - object (Object): The object to test.\r\n *\r\n *  Returns `true` if `object` is of type [[Function]]; `false` otherwise.\r\n *\r\n *  ##### Examples\r\n *\r\n *      Object.isFunction($);\r\n *      //-> true\r\n *\r\n *      Object.isFunction(123);\r\n *      //-> false\r\n **/\r\nfunction isFunction(fn)\r\n{\r\n    return Object.prototype.toString.call(fn)=== '[object Function]';\r\n}\r\n\r\n// 使用递归来实现一个深度克隆，可以复制一个目标对象，返回一个完整拷贝\r\n// 被复制的对象类型会被限制为数字、字符串、布尔、日期、数组、Object对象。不会包含函数、正则对象等\r\n/**\r\n *  Object.clone(object) -> Object\r\n *  - object (Object): The object to clone.\r\n *\r\n *  Creates and returns a shallow duplicate of the passed object by copying\r\n *  all of the original's key/value pairs onto an empty object.\r\n *\r\n *  Do note that this is a _shallow_ copy, not a _deep_ copy. Nested objects\r\n *  will retain their references.\r\n *\r\n *  ##### Examples\r\n *\r\n *      var original = {name: 'primaryColors', values: ['red', 'green', 'blue']};\r\n *      var copy = Object.clone(original);\r\n *\r\n *      original.name;\r\n *      // -> \"primaryColors\"\r\n *      original.values[0];\r\n *      // -> \"red\"\r\n *      copy.name;\r\n *      // -> \"primaryColors\"\r\n *\r\n *      copy.name = \"secondaryColors\";\r\n *      original.name;\r\n *      // -> \"primaryColors\"\r\n *      copy.name;\r\n *      // -> \"secondaryColors\"\r\n *\r\n *      copy.values[0] = 'magenta';\r\n *      copy.values[1] = 'cyan';\r\n *      copy.values[2] = 'yellow';\r\n *      original.values[0];\r\n *      // -> \"magenta\" (it's a shallow copy, so they share the array)\r\n **/\r\nfunction cloneObject(object)\r\n{\r\n    return extend({ }, object);\r\n}\r\n\r\n/**\r\n *  Object.extend(destination, source) -> Object\r\n *  - destination (Object): The object to receive the new properties.\r\n *  - source (Object): The object whose properties will be duplicated.\r\n *\r\n *  Copies all properties from the source to the destination object. Used by Prototype\r\n *  to simulate inheritance (rather statically) by copying to prototypes.\r\n *\r\n *  Documentation should soon become available that describes how Prototype implements\r\n *  OOP, where you will find further details on how Prototype uses [[Object.extend]] and\r\n *  [[Class.create]] (something that may well change in version 2.0). It will be linked\r\n *  from here.\r\n *\r\n *  Do not mistake this method with its quasi-namesake [[Element.extend]],\r\n *  which implements Prototype's (much more complex) DOM extension mechanism.\r\n **/\r\nfunction extend(destination, source)\r\n{\r\n    for (var property in source)\r\n        destination[property] = source[property];\r\n    return destination;\r\n}\r\n\r\n// 测试用例：\r\nvar srcObj = {\r\n    a: 1,\r\n    b: {\r\n        b1: [\"hello\", \"hi\"],\r\n        b2: \"JavaScript\"\r\n    }\r\n};\r\nvar abObj = srcObj;\r\nvar tarObj = cloneObject(srcObj);\r\n\r\nsrcObj.a = 2;\r\nsrcObj.b.b1[0] = \"Hello\";\r\n\r\nconsole.log(abObj.a);\r\nconsole.log(abObj.b.b1[0]);\r\n\r\nconsole.log(tarObj.a);      // 1\r\nconsole.log(tarObj.b.b1[0]);    // \"hello\"\r\n\r\n// 对数组进行去重操作，只考虑数组中元素为数字或字符串，返回一个去重后的数组\r\n// 用的是hash表,把已经出现过的通过下标的形式存入一个object内。下标的引用要比用indexOf搜索数组快的多。\r\n// http://www.cnblogs.com/fumj/archive/2012/09/09/2677711.html\r\nfunction uniqArray(arr)\r\n{\r\n    var n={},r=[]; //n为hash r临时数组\r\n    for(var i=0;i<arr.length;i++)\r\n    {\r\n        if(!n[arr[i]])\r\n        {\r\n            n[arr[i]] = true;\r\n            r.push(arr[i]);\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\n// 使用示例\r\nvar a = [1, 3, 5, 7, 5, 3];\r\nvar b = uniqArray(a);\r\nconsole.log(b); // [1, 3, 5, 7]\r\n\r\n// 实现一个简单的trim函数，用于去除一个字符串，头部和尾部的空白字符\r\n// 假定空白字符只有半角空格、Tab\r\n// 练习通过循环，以及字符串的一些基本方法，分别扫描字符串str头部和尾部是否有连续的空白字符，并且删掉他们，最后返回一个完成去除的字符串\r\n\r\n//stringObject.replace(regexp/substr,replacement) 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。\r\nfunction simpleTrim(str)\r\n{\r\n    return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n}\r\n\r\n// 很多同学肯定对于上面的代码看不下去，接下来，我们真正实现一个trim\r\n// 对字符串头尾进行空格字符的去除、包括全角半角空格、Tab等，返回一个字符串\r\n// 尝试使用一行简洁的正则表达式完成该题目\r\nfunction trim(str)\r\n{\r\n    // your implement\r\n}\r\n\r\n// 使用示例\r\n//var str = '   hi!  ';\r\n//str = trim(str);\r\n//console.log(str); // 'hi!'\r\n\r\n// 实现一个遍历数组的方法，针对数组中每一个元素执行fn函数，并将数组索引和元素作为参数传递\r\nfunction each(arr, fn)\r\n{\r\n    for (var i in arr)\r\n    {\r\n        fn(arr[i], i);\r\n    }\r\n}\r\n\r\n// 其中fn函数可以接受两个参数：item和index\r\n\r\n// 使用示例\r\nvar arr = ['java', 'c', 'php', 'html'];\r\nfunction output(item)\r\n{\r\n    console.log(item)\r\n}\r\neach(arr, output);  // java, c, php, html\r\n\r\n// 使用示例\r\nvar arr = ['java', 'c', 'php', 'html'];\r\nfunction output(item, index)\r\n{\r\n    console.log(index + ': ' + item)\r\n}\r\neach(arr, output);  // 0:java, 1:c, 2:php, 3:html\r\n\r\n// 获取一个对象里面第一层元素的数量，返回一个整数\r\nfunction getObjectLength(obj)\r\n{\r\n\r\n}\r\n\r\n// 使用示例\r\nvar obj = {\r\n    a: 1,\r\n    b: 2,\r\n    c: {\r\n        c1: 3,\r\n        c2: 4\r\n    }\r\n};\r\n\r\nconsole.log(getObjectLength(obj)); // 3\r\n\r\n// 判断是否为邮箱地址\r\nfunction isEmail(emailStr)\r\n{\r\n    // your implement\r\n}\r\n\r\n// 判断是否为手机号\r\nfunction isMobilePhone(phone)\r\n{\r\n    // your implement\r\n}"]}